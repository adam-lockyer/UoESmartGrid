[{"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\index.js":"1","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\App.js":"2","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reportWebVitals.js":"3","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Home\\Home.js":"4","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Map\\Map.js":"5","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Info\\Info.js":"6","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Login\\Login.js":"7","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\actions\\auth.js":"8","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\actions\\types.js":"9","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\util\\setAuthToken.js":"10","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\store.js":"11","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\index.js":"12","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\auth.js":"13","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"14","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\user.js":"15","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Navigation\\BottomNavigation\\BottomNavigation.js":"16","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Consumption\\Consumption.js":"17","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Detailed\\detailed.js":"18","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Logout\\Logout.js":"19","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Navigation\\TopNavigation\\TopNavigation.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":3055,"mtime":1616793985192,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2582,"mtime":1611247596654,"results":"25","hashOfConfig":"22"},{"size":3759,"mtime":1612995724065,"results":"26","hashOfConfig":"22"},{"size":1644,"mtime":1611248384792,"results":"27","hashOfConfig":"22"},{"size":1997,"mtime":1616792168706,"results":"28","hashOfConfig":"22"},{"size":1426,"mtime":1616793408495,"results":"29","hashOfConfig":"22"},{"size":314,"mtime":1610983550975,"results":"30","hashOfConfig":"22"},{"size":246,"mtime":1610983812114,"results":"31","hashOfConfig":"22"},{"size":396,"mtime":1610984719052,"results":"32","hashOfConfig":"22"},{"size":147,"mtime":1610985486138,"results":"33","hashOfConfig":"22"},{"size":899,"mtime":1611066608160,"results":"34","hashOfConfig":"22"},{"size":656,"mtime":1610986225475,"results":"35","hashOfConfig":"22"},{"size":0,"mtime":1610985479827,"results":"36","hashOfConfig":"22"},{"size":1460,"mtime":1611073090185,"results":"37","hashOfConfig":"22"},{"size":12368,"mtime":1615744338516,"results":"38","hashOfConfig":"22"},{"size":6091,"mtime":1616772285689,"results":"39","hashOfConfig":"22"},{"size":326,"mtime":1616792884359,"results":"40","hashOfConfig":"22"},{"size":1312,"mtime":1616794038012,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ihahu8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\index.js",[],["88","89"],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\App.js",["90","91","92"],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reportWebVitals.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Home\\Home.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Map\\Map.js",["93"],"import React, { useState } from \"react\";\r\nimport ReactMapGL, {\r\n\tPopup,\r\n\tStaticMap,\r\n\tMarker,\r\n\tLinearInterpolator,\r\n} from \"react-map-gl\";\r\nimport mapStyle from \"./mapStyle.json\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport poiMarker from \"./imgMarker.png\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./Map.module.css\";\r\n\r\nconst Map = () => {\r\n\tconst MAPBOX_TOKEN =\r\n\t\t\"pk.eyJ1Ijoic3F1aWdnbGVzMjU2IiwiYSI6ImNranVqeXY0MTAza3kydW51NGpvdG55MTEifQ.0kZloHbRuIykDGTOzHd1eQ\";\r\n\tconst [viewport, setViewport] = useState({\r\n\t\t// height: \"100vh\",\r\n\t\t// width: \"fit\",\r\n\t\tlatitude: 50.7367,\r\n\t\tlongitude: -3.5345,\r\n\t\tzoom: isMobile ? 15.2 : 16,\r\n\t\tbearing: 0,\r\n\t\tpitch: 0,\r\n\t\ttransitionDuration: 1000,\r\n\t\ttransitionInterpolator: new LinearInterpolator(),\r\n\t});\r\n\tconst history = useHistory();\r\n\tconst [selectedLocation, setSelectedLocation] = useState({});\r\n\r\n\tconst originalLat = 50.7367;\r\n\tconst originalLong = -3.5345;\r\n\r\n\tconst locations = [\r\n\t\t{\r\n\t\t\tlatitude: 50.737742,\r\n\t\t\tlongitude: -3.5325351662628254,\r\n\t\t\tname: \"The Harrison Building\",\r\n\t\t\ttag: \"Harrison\",\r\n\t\t\tdescription: \"Mathematics, Physics & Engineering Building\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlatitude: 50.735342771639566,\r\n\t\t\tlongitude: -3.5338534585742294,\r\n\t\t\tname: \"The Forum\",\r\n\t\t\ttag: \"Forum\",\r\n\t\t\tdescription:\r\n\t\t\t\t\"The Student Guild Building For The University Of Exeter\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlatitude: 50.73817859464701,\r\n\t\t\tlongitude: -3.530627644003169,\r\n\t\t\tname: \"The Innovation Centre\",\r\n\t\t\ttag: \"Innovation\",\r\n\t\t\tdescription:\r\n\t\t\t\t\"The Student Guild Building For The University Of Exeter\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst clicked = (location) => {\r\n\t\tsetViewport({\r\n\t\t\t...viewport,\r\n\t\t\tlatitude: location.latitude - 0.0008,\r\n\t\t\tlongitude: location.longitude,\r\n\t\t\ttransitionDuration: 500,\r\n\t\t\ttransitionInterpolator: new LinearInterpolator(),\r\n\t\t});\r\n\t\tsetSelectedLocation(location);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.map}>\r\n\t\t\t\t<ReactMapGL\r\n\t\t\t\t\t{...viewport}\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\theight=\"calc(100vh - 66px)\"\r\n\t\t\t\t\tmapStyle={mapStyle}\r\n\t\t\t\t\tonViewportChange={(nextViewport) =>\r\n\t\t\t\t\t\tsetViewport(nextViewport)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\t\tdragPan={false}\r\n\t\t\t\t\tscrollZoom={false}\r\n\t\t\t\t\ttouchZoom={false}\r\n\t\t\t\t\tdoubleClickZoom={false}\r\n\t\t\t\t\tgetCursor={(e) => \"default\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{locations.map((location, index) => (\r\n\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\t\tlatitude={location.latitude}\r\n\t\t\t\t\t\t\t\t\tlongitude={location.longitude}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => clicked(location)}\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.marker}\r\n\t\t\t\t\t\t\t\t\t\tsrc={poiMarker}\r\n\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t\t\t\t{selectedLocation.name === location.name && (\r\n\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.popup}\r\n\t\t\t\t\t\t\t\t\t\tlatitude={location.latitude}\r\n\t\t\t\t\t\t\t\t\t\tlongitude={location.longitude}\r\n\t\t\t\t\t\t\t\t\t\tcloseButton={true}\r\n\t\t\t\t\t\t\t\t\t\tcloseOnClick={false}\r\n\t\t\t\t\t\t\t\t\t\tanchor=\"top\"\r\n\t\t\t\t\t\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetViewport({\r\n\t\t\t\t\t\t\t\t\t\t\t\t...viewport,\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatitude: originalLat,\r\n\t\t\t\t\t\t\t\t\t\t\t\tlongitude: originalLong,\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedLocation({});\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles.popupContent}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h2>{location.name}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>{location.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`/${location.tag}/Consumption`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tView Consumptions\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t</ReactMapGL>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default connect(null, {})(Map);\r\n","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Info\\Info.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Login\\Login.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\actions\\auth.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\actions\\types.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\util\\setAuthToken.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\store.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\index.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\auth.js",["94"],"import {\r\n\tLOGIN_FAIL,\r\n\tLOGIN_SUCCESS,\r\n\tAUTH_ERROR,\r\n\tLOGOUT,\r\n\tUSER_LOADED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\ttoken: localStorage.getItem(\"token\"),\r\n\tisAuthenticated: false,\r\n\tloading: true,\r\n\tuser: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\tlocalStorage.setItem(\"token\", payload.token);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...payload,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase LOGIN_FAIL:\r\n\t\tcase AUTH_ERROR:\r\n\t\tcase LOGOUT:\r\n\t\t\tlocalStorage.removeItem(\"token\");\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tisAuthenticated: false,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tuser: null,\r\n\t\t\t};\r\n\t\tcase USER_LOADED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthenticated: true,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tuser: payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\reducers\\user.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Navigation\\BottomNavigation\\BottomNavigation.js",[],"F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Consumption\\Consumption.js",["95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Consumption.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst Consumption = () => {\r\n\tlet { building } = useParams();\r\n\tconst currentDate = Date.now() - 2.929e10;\r\n\tconst oneDayEpoch = 86400000;\r\n\tconst timeIntervals = [\r\n\t\t{\r\n\t\t\tstart: currentDate,\r\n\t\t\tend: currentDate - oneDayEpoch,\r\n\t\t\tletter: \"1d\",\r\n\t\t\tvalue: \"Past Day\",\r\n\t\t\tgrouping: \"Hourly Data\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tstart: currentDate,\r\n\t\t\tend: currentDate - oneDayEpoch * 7,\r\n\t\t\tletter: \"7d\",\r\n\t\t\tvalue: \"Past Week\",\r\n\t\t\tgrouping: \"Averaged  over 2 hours\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tstart: currentDate,\r\n\t\t\tend: currentDate - oneDayEpoch * 30,\r\n\t\t\tletter: \"30d\",\r\n\t\t\tvalue: \"Past Month\",\r\n\t\t\tgrouping: \"Averaged over 12 hours\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tstart: currentDate,\r\n\t\t\tend: currentDate - oneDayEpoch * 365,\r\n\t\t\tletter: \"365d\",\r\n\t\t\tvalue: \"Past Year\",\r\n\t\t\tgrouping: \"Averaged over 1 day\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tstart: currentDate,\r\n\t\t\tend: currentDate - oneDayEpoch * 3650,\r\n\t\t\tletter: \"3650d\",\r\n\t\t\tvalue: \"All Time\",\r\n\t\t\tgrouping: \"Averaged over 2 Weeks\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"Custom Date\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst [interval, setInterval] = useState(timeIntervals[0]);\r\n\tconst [dateRange, setDateRange] = useState({\r\n\t\tstartDate: new Date().getTime(),\r\n\t\tendDate: new Date().getTime(),\r\n\t});\r\n\tconst [Room, setRoom] = useState(\"\");\r\n\tconst [readings, setReadings] = useState(null);\r\n\tconst [selectedReading, setSelectedReading] = useState(null);\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst [Consump, setConsump] = useState([]);\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [units, setUnits] = useState(\"\");\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst [selectedData, setSelectedData] = useState(false);\r\n\tconst [currentGrouping, setCurrentGrouping] = useState(\"\");\r\n\tconst [timeType, setTimeType] = useState(\"\");\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`http://localhost:5000/api/rooms/${building}`\r\n\t\t);\r\n\t\tsetRooms(res.data.room);\r\n\t}, []);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await axios.get(\r\n\t\t\t`http://localhost:5000/api/rooms/reading?Room=${Room}`\r\n\t\t);\r\n\t\tsetSelectedReading(null);\r\n\t\tsetReadings(res.data.readings);\r\n\t\tsetInterval(timeIntervals[0]);\r\n\t}, [Room]);\r\n\r\n\tuseEffect(async () => {\r\n\t\tgetData();\r\n\t}, [readings, interval, selectedReading]);\r\n\r\n\tconst getData = async () => {\r\n\t\tsetConsump([]);\r\n\t\tif (interval && Room && selectedReading) {\r\n\t\t\tconst res = await axios.get(\r\n\t\t\t\t`http://localhost:5000/api/consumption/${building}?StartDate=${\r\n\t\t\t\t\tinterval.value === \"Custom Date\"\r\n\t\t\t\t\t\t? dateRange.endDate\r\n\t\t\t\t\t\t: interval.start\r\n\t\t\t\t}&EndDate=${\r\n\t\t\t\t\tinterval.value === \"Custom Date\"\r\n\t\t\t\t\t\t? dateRange.startDate\r\n\t\t\t\t\t\t: interval.end\r\n\t\t\t\t}&room=${Room}&reading=${selectedReading}`\r\n\t\t\t);\r\n\t\t\tsetConsump(res.data.consumption);\r\n\t\t\tsetCurrentGrouping(res.data.grouping);\r\n\t\t}\r\n\t};\r\n\r\n\tconst LineData = [\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tdata: Consump.map((cons) => {\r\n\t\t\t\tconst timeEpoch = Date.parse(cons.time);\r\n\t\t\t\tconst outDate = new Date(timeEpoch).toISOString().substr(0, 10);\r\n\t\t\t\tconst outTime = new Date(timeEpoch).toISOString().substr(11, 5);\r\n\t\t\t\tlet XAxis = `${outDate} ${outTime}`;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: XAxis,\r\n\t\t\t\t\ty: cons.reading,\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t},\r\n\t];\r\n\r\n\tconst handleDate = (e, startOrEnd) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tif (startOrEnd === \"end\") {\r\n\t\t\t\tsetDateRange({\r\n\t\t\t\t\t...dateRange,\r\n\t\t\t\t\tendDate: Date.parse(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsetDateRange({\r\n\t\t\t\t\t...dateRange,\r\n\t\t\t\t\tstartDate: Date.parse(e.target.value),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleIntervalClick = (timeInterval) => {\r\n\t\tif (timeInterval.value === \"Custom Date\") {\r\n\t\t\tsetModalOpen(true);\r\n\t\t\tsetInterval(timeInterval);\r\n\t\t} else {\r\n\t\t\tsetInterval(timeInterval);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tconst data = LineData[0].data[e.index];\r\n\t\tsetSelectedData(data);\r\n\t\tsetShowModal(!showModal);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{modalOpen ||\r\n\t\t\t\t(showModal && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetShowModal(false);\r\n\t\t\t\t\t\t\tsetModalOpen(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={styles.darken}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t))}\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t{modalOpen && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={styles.customDateModal}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={\"/close.png\"}\r\n\t\t\t\t\t\t\t\tonClick={() => setModalOpen(false)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={styles.dpContainer}>\r\n\t\t\t\t\t\t\t\t<h3>Pick Starting and Ending Dates</h3>\r\n\t\t\t\t\t\t\t\t<div className={styles.datePickerContainer}>\r\n\t\t\t\t\t\t\t\t\t<p>From</p>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"start\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"interval-start\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(dateRange.startDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.split(\"T\")[0]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDate(e, \"start\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={styles.datePickerContainer}>\r\n\t\t\t\t\t\t\t\t\t<p>Until</p>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"end\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"interval-end\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\t\t\tnew Date(dateRange.endDate)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.toISOString()\r\n\t\t\t\t\t\t\t\t\t\t\t\t.split(\"T\")[0]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDate(e, \"end\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetModalOpen(false);\r\n\t\t\t\t\t\t\t\t\tgetData();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{showModal && (\r\n\t\t\t\t\t<div className={styles.customDateModal}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={\"/close.png\"}\r\n\t\t\t\t\t\t\tonClick={() => setShowModal(false)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={styles.dpContainer}>\r\n\t\t\t\t\t\t\t<h3>Data</h3>\r\n\t\t\t\t\t\t\t<p>Time - {selectedData.x}</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tReading -{\" \"}\r\n\t\t\t\t\t\t\t\t{Math.round(selectedData.y * 100) / 100}{\" \"}\r\n\t\t\t\t\t\t\t\t{units === \"m3\" ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : units === \"ft3\" ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span>{units}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t{currentGrouping === \"1h\" ? (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={styles.detailsButton}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thistory.push(\r\n\t\t\t\t\t\t\t\t\t\t\t`/room/${Room}/${selectedData.x}`\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCheck Info at This Time\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName={styles.detailsButton}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tlet timeType = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\r\n\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\r\n\t\t\t\t\t\t\t\t\t\t\t)[1] === \"d\"\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\ttimeType = \"days\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\ttimeType = \"hours\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tconst originalDate1 = moment(\r\n\t\t\t\t\t\t\t\t\t\t\tselectedData.x\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tconst originalDate2 = moment(\r\n\t\t\t\t\t\t\t\t\t\t\tselectedData.x\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tconst adjustedStart = originalDate1\r\n\t\t\t\t\t\t\t\t\t\t\t.subtract(\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\r\n\t\t\t\t\t\t\t\t\t\t\t\t)[0],\r\n\t\t\t\t\t\t\t\t\t\t\t\ttimeType\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t.valueOf();\r\n\t\t\t\t\t\t\t\t\t\tconst adjustedEnd = originalDate2\r\n\t\t\t\t\t\t\t\t\t\t\t.add(\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\r\n\t\t\t\t\t\t\t\t\t\t\t\t)[0],\r\n\t\t\t\t\t\t\t\t\t\t\t\ttimeType\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t.valueOf();\r\n\t\t\t\t\t\t\t\t\t\tsetDateRange({\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate: adjustedStart,\r\n\t\t\t\t\t\t\t\t\t\t\tendDate: adjustedEnd,\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tsetShowModal(false);\r\n\t\t\t\t\t\t\t\t\t\tsetInterval(timeIntervals[5]);\r\n\t\t\t\t\t\t\t\t\t\tgetData();\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tView Details\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={styles.BuildingImg}>\r\n\t\t\t\t\t<div className={styles.Prompt}>\r\n\t\t\t\t\t\t{!Room ? (\r\n\t\t\t\t\t\t\t<h5>Select a Room</h5>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t!selectedReading && <h5>Select a Measurement</h5>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.roomNames}>\r\n\t\t\t\t\t\t{rooms.map((room) => (\r\n\t\t\t\t\t\t\t<button onClick={() => setRoom(room.value)}>\r\n\t\t\t\t\t\t\t\t{room.value}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.Graph}>\r\n\t\t\t\t\t<div className={styles.Boxed}>\r\n\t\t\t\t\t\t<div className={styles.Tabs}>\r\n\t\t\t\t\t\t\t<div className={styles.readingTabs}>\r\n\t\t\t\t\t\t\t\t{readings &&\r\n\t\t\t\t\t\t\t\t\treadings.map((reading) => (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedReading(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treading.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treading.name ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Electric\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? setUnits(\"kWh\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: reading.name ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \"Water\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? setUnits(\"m3\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: reading.name ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Gas\" &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  setUnits(\"ft3\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedReading ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treading.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? styles.active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{reading.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={styles.intervalTabs}>\r\n\t\t\t\t\t\t\t\t{timeIntervals.map((timeInterval) => (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleIntervalClick(timeInterval);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\ttimeInterval.letter ===\r\n\t\t\t\t\t\t\t\t\t\t\tinterval.letter\r\n\t\t\t\t\t\t\t\t\t\t\t\t? styles.active\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{timeInterval.value}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.GraphStyling}>\r\n\t\t\t\t\t\t\t{Consump.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<MyResponsiveLine\r\n\t\t\t\t\t\t\t\t\t\tdata={LineData}\r\n\t\t\t\t\t\t\t\t\t\tunits={units}\r\n\t\t\t\t\t\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h4 className={styles.noData}>\r\n\t\t\t\t\t\t\t\t\tNo Data Available\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nconst MyResponsiveLine = ({ data, units, handleClick }) => {\r\n\treturn (\r\n\t\t<ResponsiveLine\r\n\t\t\tonClick={(e) => handleClick(e)}\r\n\t\t\tdata={data}\r\n\t\t\tmargin={{ top: 100, right: 70, bottom: 70, left: 70 }}\r\n\t\t\txScale={{\r\n\t\t\t\ttype: \"time\",\r\n\t\t\t\tformat: \"%Y-%m-%d %H:%M\",\r\n\t\t\t}}\r\n\t\t\txFormat=\"time:%Y-%m-%d %H:%M\"\r\n\t\t\tyScale={{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tmax: \"auto\",\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tmin: 0,\r\n\t\t\t}}\r\n\t\t\tyFormat=\" >-.2f\"\r\n\t\t\tcurve=\"monotoneX\"\r\n\t\t\taxisTop={null}\r\n\t\t\taxisRight={null}\r\n\t\t\taxisBottom={{\r\n\t\t\t\torient: \"bottom\",\r\n\t\t\t\tformat: \"%b %d, %H:%M\",\r\n\t\t\t\ttickValues: 10,\r\n\t\t\t\tlegend: \"time scale\",\r\n\t\t\t\tlegend: \"Time\",\r\n\t\t\t\ttickRotation: -30,\r\n\t\t\t\tlegendOffset: 60,\r\n\t\t\t\tlegendPosition: \"middle\",\r\n\t\t\t}}\r\n\t\t\taxisLeft={{\r\n\t\t\t\torient: \"left\",\r\n\t\t\t\ttickSize: 5,\r\n\t\t\t\ttickPadding: 5,\r\n\t\t\t\ttickRotation: 0,\r\n\t\t\t\tlegend: \"Reading Value\",\r\n\t\t\t\tlegendOffset: -40,\r\n\t\t\t\tlegendPosition: \"middle\",\r\n\t\t\t}}\r\n\t\t\ttooltip={({\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\tserieColor,\r\n\t\t\t\t\tdata: { xFormatted, yFormatted },\r\n\t\t\t\t},\r\n\t\t\t}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${styles.tooltip} ${\r\n\t\t\t\t\t\t\tx > 700 && styles.translatedOnRight\r\n\t\t\t\t\t\t} ${x < 70 && styles.translatedOnLeft}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={styles.square}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackground: serieColor,\r\n\t\t\t\t\t\t\t\twidth: \"20px\",\r\n\t\t\t\t\t\t\t\theight: \"20px\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<div className={styles.paragraphs}>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Time</strong>: {xFormatted}{\" \"}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Reading</strong>: {yFormatted}{\" \"}\r\n\t\t\t\t\t\t\t\t{units === \"m3\" ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : units === \"ft3\" ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span>{units}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\tcolors={{ scheme: \"category10\" }}\r\n\t\t\tpointSize={5}\r\n\t\t\tpointColor={{ theme: \"background\" }}\r\n\t\t\tpointBorderWidth={2}\r\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\r\n\t\t\tpointLabelYOffset={-12}\r\n\t\t\tpointLabelXOffset={-12}\r\n\t\t\tenableArea={true}\r\n\t\t\tuseMesh={true}\r\n\t\t\tareaOpacity={0.3}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Consumption;\r\n","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Detailed\\detailed.js",["108","109","110","111","112","113","114","115"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./detailed.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport moment from \"moment\";\r\nimport data from \"./weatherdata.json\";\r\n\r\nconst Detailed = () => {\r\n\tlet { Room, date } = useParams();\r\n\tconst newDate = moment(date.split(\" \")[0]);\r\n\tconst displayDate = newDate.format(\"dddd [the] Do [of] MMMM YYYY\");\r\n\tconst startDate = newDate.format(\"YYYY-MM-DD\");\r\n\tconst selectedHour = moment(date.split(\" \")[1]);\r\n\tconst [iconName, setIconName] = useState(\"\");\r\n\tconst [graphData, setGraphData] = useState([]);\r\n\tuseEffect(async () => {\r\n\t\t//const res = await axios.get(\r\n\t\t//\t`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/50.73693657241516%2C%20-3.535222603443927/${startDate}?unitGroup=uk&key=X3SP63DXBLARJBRRF6PMBTYK6&include=obs%2Chours%2Ccurrent%2Chistfcst`\r\n\t\t//);\r\n\r\n\t\tconst hourlyData = data.days[0].hours;\r\n\t\tconst icon = data.days[0].icon;\r\n\t\tsetGraphData(hourlyData);\r\n\t\tif (icon === \"rain\") {\r\n\t\t\tsetIconName(\"chancerain.svg\");\r\n\t\t} else if (icon === \"snow\") {\r\n\t\t\tsetIconName(\"chancesnow.svg\");\r\n\t\t} else if (icon === \"cloudy\") {\r\n\t\t\tsetIconName(\"cloudy.svg\");\r\n\t\t} else if (icon === \"partly-cloudy-day\") {\r\n\t\t\tsetIconName(\"partlycloudy.svg\");\r\n\t\t} else if (icon === \"partly-cloudy-night\") {\r\n\t\t\tsetIconName(\"nt_partlycloudy.svg\");\r\n\t\t} else if (icon === \"fog\") {\r\n\t\t\tsetIconName(\"fog.svg\");\r\n\t\t} else if (icon === \"wind\") {\r\n\t\t\tsetIconName(\"hazy.svg\");\r\n\t\t} else if (icon === \"clear-day\") {\r\n\t\t\tsetIconName(\"clear.svg\");\r\n\t\t} else if (icon === \"clear-night\") {\r\n\t\t\tsetIconName(\"nt_clear.svg\");\r\n\t\t} else {\r\n\t\t\tsetIconName(\"unknown.svg\");\r\n\t\t}\r\n\t}, []);\r\n\tconst tempData = graphData.map((e) => ({ x: e.datetime, y: e.temp }));\r\n\tconst humidityData = graphData.map((e) => ({\r\n\t\tx: e.datetime,\r\n\t\ty: e.humidity,\r\n\t}));\r\n\tconst windspeedData = graphData.map((e) => ({\r\n\t\tx: e.datetime,\r\n\t\ty: e.windspeed,\r\n\t}));\r\n\tconst LineData1 = [\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tdata: tempData,\r\n\t\t},\r\n\t];\r\n\tconst LineData2 = [\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tdata: humidityData,\r\n\t\t},\r\n\t];\r\n\tconst LineData3 = [\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tdata: windspeedData,\r\n\t\t},\r\n\t];\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<div className={styles.Boxed}>\r\n\t\t\t\t<h3>Weather Data for {displayDate}</h3>\r\n\t\t\t\t<img src={\"/black/svg/\" + iconName} />\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAverage Temperature:{\"  \"}\r\n\t\t\t\t\t<b>\r\n\t\t\t\t\t\t{data.days[0].temp}\r\n\t\t\t\t\t\t&#8451;\r\n\t\t\t\t\t</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tMinimum:{\"  \"}\r\n\t\t\t\t\t<b>\r\n\t\t\t\t\t\t{data.days[0].tempmin}\r\n\t\t\t\t\t\t&#8451;\r\n\t\t\t\t\t</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tMaximum:{\"  \"}\r\n\t\t\t\t\t<b>\r\n\t\t\t\t\t\t{data.days[0].tempmax}\r\n\t\t\t\t\t\t&#8451;\r\n\t\t\t\t\t</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFeels Like:{\"  \"}\r\n\t\t\t\t\t<b>\r\n\t\t\t\t\t\t{data.days[0].feelslike}\r\n\t\t\t\t\t\t&#8451;\r\n\t\t\t\t\t</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAverage Wind Speed:\r\n\t\t\t\t\t<b> {data.days[0].windspeed} m/h</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tHumidity: <b> {data.days[0].humidity}%</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPrecipitation:\r\n\t\t\t\t\t<b> {data.days[0].precip} mm</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tVisibility:\r\n\t\t\t\t\t<b> {data.days[0].visibility} miles</b>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tCloud Coverage:\r\n\t\t\t\t\t<b> {data.days[0].cloudcover}%</b>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<div className={styles.Chart}>\r\n\t\t\t\t\t<h4>Temperature on the {newDate.format(\"Do [of] MMMM\")}</h4>\r\n\t\t\t\t\t<MyResponsiveLine\r\n\t\t\t\t\t\tdata={LineData1}\r\n\t\t\t\t\t\tunits={<>&#8451;</>}\r\n\t\t\t\t\t\tleftLegend=\"Temperature (&#8451;)\"\r\n\t\t\t\t\t\tchosenScheme=\"category10\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h4>Humidity on the {newDate.format(\"Do [of] MMMM\")}</h4>\r\n\t\t\t\t\t<MyResponsiveLine\r\n\t\t\t\t\t\tdata={LineData2}\r\n\t\t\t\t\t\tunits=\"%\"\r\n\t\t\t\t\t\tleftLegend=\"Humidity (%)\"\r\n\t\t\t\t\t\tchosenScheme=\"set1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<h4>Wind Speed on the {newDate.format(\"Do [of] MMMM\")}</h4>\r\n\t\t\t\t\t<MyResponsiveLine\r\n\t\t\t\t\t\tdata={LineData3}\r\n\t\t\t\t\t\tunits=\"m/h\"\r\n\t\t\t\t\t\tleftLegend=\"Wind Speed (miles per hour)\"\r\n\t\t\t\t\t\tchosenScheme=\"spectral\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst MyResponsiveLine = ({ data, units, leftLegend, chosenScheme }) => {\r\n\treturn (\r\n\t\t<ResponsiveLine\r\n\t\t\t//onClick={(e) => handleClick(e)}\r\n\t\t\tdata={data}\r\n\t\t\tmargin={{ top: 20, right: 70, bottom: 70, left: 70 }}\r\n\t\t\txScale={{\r\n\t\t\t\ttype: \"time\",\r\n\t\t\t\tformat: \"%H:%M:%S\",\r\n\t\t\t}}\r\n\t\t\txFormat=\"time:%H:%M\"\r\n\t\t\tyScale={{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tmax: \"auto\",\r\n\t\t\t\tstacked: true,\r\n\t\t\t\tmin: 0,\r\n\t\t\t}}\r\n\t\t\tyFormat=\" >-.2f\"\r\n\t\t\tcurve=\"monotoneX\"\r\n\t\t\taxisTop={null}\r\n\t\t\taxisRight={null}\r\n\t\t\taxisBottom={{\r\n\t\t\t\torient: \"bottom\",\r\n\t\t\t\tformat: \"%H:%M\",\r\n\t\t\t\ttickValues: \"every 2 hours\",\r\n\t\t\t\tlegend: \"time scale\",\r\n\t\t\t\tlegend: \"Time\",\r\n\t\t\t\ttickRotation: -30,\r\n\t\t\t\tlegendOffset: 50,\r\n\t\t\t\tlegendPosition: \"middle\",\r\n\t\t\t}}\r\n\t\t\taxisLeft={{\r\n\t\t\t\torient: \"left\",\r\n\t\t\t\ttickSize: 5,\r\n\t\t\t\ttickPadding: 5,\r\n\t\t\t\ttickRotation: 0,\r\n\t\t\t\tlegend: leftLegend,\r\n\t\t\t\tlegendOffset: -40,\r\n\t\t\t\tlegendPosition: \"middle\",\r\n\t\t\t}}\r\n\t\t\ttooltip={({\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\tserieColor,\r\n\t\t\t\t\tdata: { xFormatted, yFormatted },\r\n\t\t\t\t},\r\n\t\t\t}) => {\r\n\t\t\t\tconsole.log(x);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${styles.tooltip} ${\r\n\t\t\t\t\t\t\tx > 850 && styles.translatedOnRight\r\n\t\t\t\t\t\t} ${x < 70 && styles.translatedOnLeft}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={styles.square}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackground: serieColor,\r\n\t\t\t\t\t\t\t\twidth: \"20px\",\r\n\t\t\t\t\t\t\t\theight: \"20px\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<div className={styles.paragraphs}>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Time</strong>: {xFormatted}{\" \"}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<strong>Reading</strong>: {yFormatted} {units}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\tcolors={{ scheme: chosenScheme }}\r\n\t\t\tlineWidth={3}\r\n\t\t\tpointSize={5}\r\n\t\t\tpointColor={{ theme: \"background\" }}\r\n\t\t\tpointBorderWidth={2}\r\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\r\n\t\t\tpointLabelYOffset={-12}\r\n\t\t\tpointLabelXOffset={-12}\r\n\t\t\tenableArea={true}\r\n\t\t\tuseMesh={true}\r\n\t\t\tareaOpacity={0.3}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Detailed;\r\n","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Logout\\Logout.js",["116"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Logout = ({ logout }) => {\r\n\tuseEffect(() => {\r\n\t\tlogout();\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Logging Out...</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, { logout })(Logout);\r\n","F:\\Work\\Uni Year 3\\Individual Project\\Project\\client\\src\\Components\\Navigation\\TopNavigation\\TopNavigation.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":20,"nodeType":"123","messageId":"124","endLine":5,"endColumn":27},{"ruleId":"121","severity":1,"message":"125","line":38,"column":9,"nodeType":"123","messageId":"124","endLine":38,"endColumn":14},{"ruleId":"121","severity":1,"message":"126","line":38,"column":16,"nodeType":"123","messageId":"124","endLine":38,"endColumn":24},{"ruleId":"121","severity":1,"message":"127","line":4,"column":2,"nodeType":"123","messageId":"124","endLine":4,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":16,"column":1,"nodeType":"130","endLine":48,"endColumn":2},{"ruleId":"121","severity":1,"message":"131","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"132","line":70,"column":9,"nodeType":"123","messageId":"124","endLine":70,"endColumn":17},{"ruleId":"121","severity":1,"message":"133","line":70,"column":19,"nodeType":"123","messageId":"124","endLine":70,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":73,"column":12,"nodeType":"136","endLine":78,"endColumn":3},{"ruleId":"134","severity":1,"message":"137","line":78,"column":5,"nodeType":"138","endLine":78,"endColumn":7,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"135","line":80,"column":12,"nodeType":"136","endLine":87,"endColumn":3},{"ruleId":"134","severity":1,"message":"140","line":87,"column":5,"nodeType":"138","endLine":87,"endColumn":11,"suggestions":"141"},{"ruleId":"134","severity":1,"message":"135","line":89,"column":12,"nodeType":"136","endLine":91,"endColumn":3},{"ruleId":"134","severity":1,"message":"142","line":91,"column":5,"nodeType":"138","endLine":91,"endColumn":42,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":175,"column":8,"nodeType":"146","endLine":178,"endColumn":10},{"ruleId":"144","severity":1,"message":"145","line":225,"column":7,"nodeType":"146","endLine":228,"endColumn":9},{"ruleId":"147","severity":1,"message":"148","line":340,"column":14,"nodeType":"149","messageId":"150","endLine":350,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":430,"column":5,"nodeType":"153","messageId":"154","endLine":430,"endColumn":11},{"ruleId":"121","severity":1,"message":"155","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"131","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"156","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":12},{"ruleId":"121","severity":1,"message":"157","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":17},{"ruleId":"121","severity":1,"message":"158","line":15,"column":8,"nodeType":"123","messageId":"124","endLine":15,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":18,"column":12,"nodeType":"136","endLine":47,"endColumn":3},{"ruleId":"144","severity":1,"message":"145","line":79,"column":5,"nodeType":"146","endLine":79,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":187,"column":5,"nodeType":"153","messageId":"154","endLine":187,"endColumn":11},{"ruleId":"134","severity":1,"message":"159","line":8,"column":5,"nodeType":"138","endLine":8,"endColumn":7,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'StaticMap' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isMobile' is defined but never used.","'timeType' is assigned a value but never used.","'setTimeType' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'building'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'timeIntervals'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["165"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-dupe-keys","Duplicate key 'legend'.","ObjectExpression","unexpected","'axios' is defined but never used.","'Room' is assigned a value but never used.","'startDate' is assigned a value but never used.","'selectedHour' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [building]",{"range":"175","text":"176"},"Update the dependencies array to be: [Room, timeIntervals]",{"range":"177","text":"178"},"Update the dependencies array to be: [readings, interval, selectedReading, getData]",{"range":"179","text":"180"},"Update the dependencies array to be: [logout]",{"range":"181","text":"182"},[2262,2264],"[building]",[2495,2501],"[Room, timeIntervals]",[2551,2588],"[readings, interval, selectedReading, getData]",[202,204],"[logout]"]
[{"W:\\UoESmartGrid\\client\\src\\index.js":"1","W:\\UoESmartGrid\\client\\src\\App.js":"2","W:\\UoESmartGrid\\client\\src\\reportWebVitals.js":"3","W:\\UoESmartGrid\\client\\src\\store.js":"4","W:\\UoESmartGrid\\client\\src\\util\\setAuthToken.js":"5","W:\\UoESmartGrid\\client\\src\\actions\\auth.js":"6","W:\\UoESmartGrid\\client\\src\\Components\\Map\\Map.js":"7","W:\\UoESmartGrid\\client\\src\\Components\\Home\\Home.js":"8","W:\\UoESmartGrid\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"9","W:\\UoESmartGrid\\client\\src\\Components\\Login\\Login.js":"10","W:\\UoESmartGrid\\client\\src\\Components\\Consumption\\Consumption.js":"11","W:\\UoESmartGrid\\client\\src\\Components\\Detailed\\detailed.js":"12","W:\\UoESmartGrid\\client\\src\\Components\\Navigation\\TopNavigation\\TopNavigation.js":"13","W:\\UoESmartGrid\\client\\src\\Components\\Info\\Info.js":"14","W:\\UoESmartGrid\\client\\src\\Components\\Forecast\\forecast.js":"15","W:\\UoESmartGrid\\client\\src\\Components\\Navigation\\BottomNavigation\\BottomNavigation.js":"16","W:\\UoESmartGrid\\client\\src\\Components\\Logout\\Logout.js":"17","W:\\UoESmartGrid\\client\\src\\actions\\types.js":"18","W:\\UoESmartGrid\\client\\src\\Components\\Loading\\Loading.js":"19","W:\\UoESmartGrid\\client\\src\\reducers\\index.js":"20","W:\\UoESmartGrid\\client\\src\\reducers\\auth.js":"21","W:\\UoESmartGrid\\client\\src\\reducers\\user.js":"22"},{"size":283,"mtime":1722616519560,"results":"23","hashOfConfig":"24"},{"size":2451,"mtime":1722616519533,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1722616519561,"results":"26","hashOfConfig":"24"},{"size":380,"mtime":1722616519561,"results":"27","hashOfConfig":"24"},{"size":235,"mtime":1722616519561,"results":"28","hashOfConfig":"24"},{"size":1414,"mtime":1722616519555,"results":"29","hashOfConfig":"24"},{"size":7375,"mtime":1722616519553,"results":"30","hashOfConfig":"24"},{"size":2617,"mtime":1722616519535,"results":"31","hashOfConfig":"24"},{"size":606,"mtime":1722616519555,"results":"32","hashOfConfig":"24"},{"size":1915,"mtime":1722616519552,"results":"33","hashOfConfig":"24"},{"size":12891,"mtime":1722616519533,"results":"34","hashOfConfig":"24"},{"size":6250,"mtime":1722616519534,"results":"35","hashOfConfig":"24"},{"size":1325,"mtime":1722616519555,"results":"36","hashOfConfig":"24"},{"size":1591,"mtime":1722616519536,"results":"37","hashOfConfig":"24"},{"size":10047,"mtime":1722616519535,"results":"38","hashOfConfig":"24"},{"size":1382,"mtime":1722616519554,"results":"39","hashOfConfig":"24"},{"size":310,"mtime":1722616519553,"results":"40","hashOfConfig":"24"},{"size":306,"mtime":1722616519556,"results":"41","hashOfConfig":"24"},{"size":744,"mtime":1722616519537,"results":"42","hashOfConfig":"24"},{"size":143,"mtime":1722616519561,"results":"43","hashOfConfig":"24"},{"size":851,"mtime":1722616519561,"results":"44","hashOfConfig":"24"},{"size":0,"mtime":1722616519561,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"i8kv45",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"W:\\UoESmartGrid\\client\\src\\index.js",[],["97","98"],"W:\\UoESmartGrid\\client\\src\\App.js",[],"W:\\UoESmartGrid\\client\\src\\reportWebVitals.js",[],"W:\\UoESmartGrid\\client\\src\\store.js",[],"W:\\UoESmartGrid\\client\\src\\util\\setAuthToken.js",[],"W:\\UoESmartGrid\\client\\src\\actions\\auth.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Map\\Map.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Home\\Home.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Login\\Login.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Consumption\\Consumption.js",["99","100","101","102","103","104"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./Consumption.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst Consumption = () => {\n\tlet { building } = useParams();\n\t//const currentDate = Date.now()\n\tconst currentDate = moment().unix() * 1000;\n\tconst oneDayEpoch = 86400000;\n\tconst timeIntervals = [\n\t\t{\n\t\t\tstart: currentDate,\n\t\t\tend: currentDate - oneDayEpoch,\n\t\t\tletter: \"1d\",\n\t\t\tvalue: \"Past Day\",\n\t\t\tgrouping: \"Hourly Data\",\n\t\t},\n\t\t{\n\t\t\tstart: currentDate,\n\t\t\tend: currentDate - oneDayEpoch * 7,\n\t\t\tletter: \"7d\",\n\t\t\tvalue: \"Past Week\",\n\t\t\tgrouping: \"Averaged  over 2 hours\",\n\t\t},\n\t\t{\n\t\t\tstart: currentDate,\n\t\t\tend: currentDate - oneDayEpoch * 30,\n\t\t\tletter: \"30d\",\n\t\t\tvalue: \"Past Month\",\n\t\t\tgrouping: \"Averaged over 12 hours\",\n\t\t},\n\t\t{\n\t\t\tstart: currentDate,\n\t\t\tend: currentDate - oneDayEpoch * 365,\n\t\t\tletter: \"365d\",\n\t\t\tvalue: \"Past Year\",\n\t\t\tgrouping: \"Averaged over 1 day\",\n\t\t},\n\t\t{\n\t\t\tstart: currentDate,\n\t\t\tend: currentDate - oneDayEpoch * 3650,\n\t\t\tletter: \"3650d\",\n\t\t\tvalue: \"All Time\",\n\t\t\tgrouping: \"Averaged over 2 Weeks\",\n\t\t},\n\t\t{\n\t\t\tvalue: \"Custom Date\",\n\t\t},\n\t];\n\n\tconst [interval, setInterval] = useState(timeIntervals[0]);\n\tconst [dateRange, setDateRange] = useState({\n\t\tstartDate: new Date().getTime(),\n\t\tendDate: new Date().getTime(),\n\t});\n\tconst [Room, setRoom] = useState(\"\");\n\tconst [readings, setReadings] = useState(null);\n\tconst [selectedReading, setSelectedReading] = useState(null);\n\tconst [rooms, setRooms] = useState([]);\n\tconst [Consump, setConsump] = useState([]);\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [units, setUnits] = useState(\"\");\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [selectedData, setSelectedData] = useState(false);\n\tconst [currentGrouping, setCurrentGrouping] = useState(\"\");\n\tconst history = useHistory();\n\n\tuseEffect(async () => {\n\t\tconst res = await axios.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/api/rooms/${building}`\n\t\t);\n\t\tsetRooms(res.data.room);\n\t}, []);\n\n\tuseEffect(async () => {\n\t\tconst res = await axios.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/api/rooms/reading?Room=${Room}`\n\t\t);\n\t\tsetSelectedReading(null);\n\t\tsetReadings(res.data.readings);\n\t\tsetInterval(timeIntervals[0]);\n\t}, [Room]);\n\n\tuseEffect(async () => {\n\t\tgetData();\n\t}, [readings, interval, selectedReading]);\n\n\tconst getData = async () => {\n\t\tsetConsump([]);\n\t\tif (interval && Room && selectedReading) {\n\t\t\tconst res = await axios.get(\n\t\t\t\t`${\n\t\t\t\t\tprocess.env.REACT_APP_API_URL\n\t\t\t\t}/api/consumption/${building}?StartDate=${\n\t\t\t\t\tinterval.value === \"Custom Date\"\n\t\t\t\t\t\t? dateRange.endDate\n\t\t\t\t\t\t: interval.start\n\t\t\t\t}&EndDate=${\n\t\t\t\t\tinterval.value === \"Custom Date\"\n\t\t\t\t\t\t? dateRange.startDate\n\t\t\t\t\t\t: interval.end\n\t\t\t\t}&room=${Room}&reading=${selectedReading}`\n\t\t\t);\n\t\t\tsetConsump(res.data.consumption);\n\t\t\tsetCurrentGrouping(res.data.grouping);\n\t\t}\n\t};\n\n\tconst LineData = [\n\t\t{\n\t\t\tid: \"\",\n\t\t\tdata: Consump.map((cons) => {\n\t\t\t\tconst timeEpoch = Date.parse(cons.time);\n\t\t\t\tconst outDate = new Date(timeEpoch).toISOString().substr(0, 10);\n\t\t\t\tconst outTime = new Date(timeEpoch).toISOString().substr(11, 5);\n\t\t\t\tlet XAxis = `${outDate} ${outTime}`;\n\t\t\t\treturn {\n\t\t\t\t\tx: XAxis,\n\t\t\t\t\ty: cons.reading,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t];\n\n\tconst handleDate = (e, startOrEnd) => {\n\t\tif (e.target.value) {\n\t\t\tif (startOrEnd === \"end\") {\n\t\t\t\tsetDateRange({\n\t\t\t\t\t...dateRange,\n\t\t\t\t\tendDate: Date.parse(e.target.value),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetDateRange({\n\t\t\t\t\t...dateRange,\n\t\t\t\t\tstartDate: Date.parse(e.target.value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleIntervalClick = (timeInterval) => {\n\t\tif (timeInterval.value === \"Custom Date\") {\n\t\t\tsetModalOpen(true);\n\t\t\tsetInterval(timeInterval);\n\t\t} else {\n\t\t\tsetInterval(timeInterval);\n\t\t}\n\t};\n\n\tconst handleClick = (e) => {\n\t\tconst data = LineData[0].data[e.index];\n\t\tsetSelectedData(data);\n\t\tsetShowModal(!showModal);\n\t};\n\treturn (\n\t\t<>\n\t\t\t{(modalOpen || showModal) && (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName={styles.darken}\n\t\t\t\t></div>\n\t\t\t)}\n\t\t\t<div className={styles.container}>\n\t\t\t\t{modalOpen && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`${styles.modal} ${styles.customDateModal}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\"/close.png\"}\n\t\t\t\t\t\t\t\tonClick={() => setModalOpen(false)}\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className={styles.dpContainer}>\n\t\t\t\t\t\t\t\t<h3>Pick Starting and Ending Dates</h3>\n\t\t\t\t\t\t\t\t<div className={styles.datePickerContainer}>\n\t\t\t\t\t\t\t\t\t<p>From</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\t\tid=\"start\"\n\t\t\t\t\t\t\t\t\t\tname=\"interval-start\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tnew Date(dateRange.startDate)\n\t\t\t\t\t\t\t\t\t\t\t\t.toISOString()\n\t\t\t\t\t\t\t\t\t\t\t\t.split(\"T\")[0]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDate(e, \"start\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.datePickerContainer}>\n\t\t\t\t\t\t\t\t\t<p>Until</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={styles.datepicker}\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\t\tid=\"end\"\n\t\t\t\t\t\t\t\t\t\tname=\"interval-end\"\n\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\tnew Date(dateRange.endDate)\n\t\t\t\t\t\t\t\t\t\t\t\t.toISOString()\n\t\t\t\t\t\t\t\t\t\t\t\t.split(\"T\")[0]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDate(e, \"end\")}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\t\t\t\tgetData();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{showModal && (\n\t\t\t\t\t<div className={styles.customDateModal}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={\"/close.png\"}\n\t\t\t\t\t\t\tonClick={() => setShowModal(false)}\n\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className={styles.dpContainer}>\n\t\t\t\t\t\t\t<h3>Selected Data</h3>\n\t\t\t\t\t\t\t<div className={styles.dataContainer}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tTime -{\" \"}\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{moment(selectedData.x).format(\n\t\t\t\t\t\t\t\t\t\t\t\"dddd, MMMM Do YYYY, h:mm:ss\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tReading -{\" \"}\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{Math.round(selectedData.y * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t\t{units === \"m3\" ? (\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t) : units === \"ft3\" ? (\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span>{units}</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{currentGrouping === \"1h\" ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={styles.detailsButton}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\thistory.push(\n\t\t\t\t\t\t\t\t\t\t\t`/room/${Room}/${selectedData.x}`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCheck Info at This Time\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={styles.detailsButton}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlet timeType = \"\";\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t\t)[1] === \"d\"\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\ttimeType = \"days\";\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttimeType = \"hours\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst originalDate1 = moment(\n\t\t\t\t\t\t\t\t\t\t\tselectedData.x\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst originalDate2 = moment(\n\t\t\t\t\t\t\t\t\t\t\tselectedData.x\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst adjustedStart = originalDate1\n\t\t\t\t\t\t\t\t\t\t\t.subtract(\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t\t\t)[0],\n\t\t\t\t\t\t\t\t\t\t\t\ttimeType\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.valueOf();\n\t\t\t\t\t\t\t\t\t\tlet adjustedEnd = originalDate2.add(\n\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t\t)[0],\n\t\t\t\t\t\t\t\t\t\t\ttimeType\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif ((timeType = \"h\")) {\n\t\t\t\t\t\t\t\t\t\t\tadjustedEnd = adjustedEnd\n\t\t\t\t\t\t\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t\t\t\t)[0],\n\t\t\t\t\t\t\t\t\t\t\t\t\ttimeType\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t.valueOf();\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsetDateRange({\n\t\t\t\t\t\t\t\t\t\t\tstartDate: adjustedStart,\n\t\t\t\t\t\t\t\t\t\t\tendDate: adjustedEnd,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t\t\t\t\t\tsetInterval(timeIntervals[5]);\n\t\t\t\t\t\t\t\t\t\tgetData();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tView Details\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className={styles.BuildingImg}>\n\t\t\t\t\t<div className={styles.Prompt}>\n\t\t\t\t\t\t{!Room ? (\n\t\t\t\t\t\t\t<h5>Select a Room</h5>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t!selectedReading && <h5>Select a Measurement</h5>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.roomNames}>\n\t\t\t\t\t\t{rooms.map((room) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => setRoom(room.value)}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderRight:\n\t\t\t\t\t\t\t\t\t\tRoom === room.value\n\t\t\t\t\t\t\t\t\t\t\t? \"10px solid rgba(0, 124, 226, 0.8)\"\n\t\t\t\t\t\t\t\t\t\t\t: \"10px solid transparent\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{room.value}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.Graph}>\n\t\t\t\t\t<div className={styles.Boxed}>\n\t\t\t\t\t\t<div className={styles.Tabs}>\n\t\t\t\t\t\t\t<div className={styles.readingTabs}>\n\t\t\t\t\t\t\t\t{readings &&\n\t\t\t\t\t\t\t\t\treadings.map((reading) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedReading(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treading.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\treading.name === \"Electric\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? setUnits(\"kWh\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: reading.name ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \"Water\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? setUnits(\"m3\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: reading.name ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Gas\" &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  setUnits(\"m3\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetData();\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedReading ===\n\t\t\t\t\t\t\t\t\t\t\t\t\treading.name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? styles.active\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{reading.name}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={styles.intervalTabs}>\n\t\t\t\t\t\t\t\t{timeIntervals.map((timeInterval) => (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleIntervalClick(timeInterval);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\ttimeInterval.letter ===\n\t\t\t\t\t\t\t\t\t\t\tinterval.letter\n\t\t\t\t\t\t\t\t\t\t\t\t? styles.active\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{timeInterval.value}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.GraphStyling}>\n\t\t\t\t\t\t\t{Consump.length > 0 ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<MyResponsiveLine\n\t\t\t\t\t\t\t\t\t\tdata={LineData}\n\t\t\t\t\t\t\t\t\t\tunits={units}\n\t\t\t\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h4 className={styles.noData}>\n\t\t\t\t\t\t\t\t\tNo Data Available\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.groupingPrompt}>\n\t\t\t\t\t\t\t{Consump.length > 0 && currentGrouping && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tData is grouped over{\" \"}\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcurrentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t\t\t\t\t}{\" \"}\n\t\t\t\t\t\t\t\t\t\t{currentGrouping.match(\n\t\t\t\t\t\t\t\t\t\t\t/[a-z]+|[^a-z]+/gi\n\t\t\t\t\t\t\t\t\t\t)[1] === \"d\"\n\t\t\t\t\t\t\t\t\t\t\t? \"day(s)\"\n\t\t\t\t\t\t\t\t\t\t\t: \"hour(s)\"}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nconst MyResponsiveLine = ({ data, units, handleClick }) => {\n\treturn (\n\t\t<ResponsiveLine\n\t\t\tonClick={(e) => handleClick(e)}\n\t\t\tdata={data}\n\t\t\tmargin={{ top: 100, right: 70, bottom: 70, left: 70 }}\n\t\t\txScale={{\n\t\t\t\ttype: \"time\",\n\t\t\t\tformat: \"%Y-%m-%d %H:%M\",\n\t\t\t}}\n\t\t\txFormat=\"time:%Y-%m-%d %H:%M\"\n\t\t\tyScale={{\n\t\t\t\ttype: \"linear\",\n\t\t\t\tmax: \"auto\",\n\t\t\t\tstacked: true,\n\t\t\t\tmin: 0,\n\t\t\t}}\n\t\t\tyFormat=\" >-.2f\"\n\t\t\tcurve=\"monotoneX\"\n\t\t\taxisTop={null}\n\t\t\taxisRight={null}\n\t\t\taxisBottom={{\n\t\t\t\torient: \"bottom\",\n\t\t\t\tformat: \"%b %d, %H:%M\",\n\t\t\t\ttickValues: 10,\n\t\t\t\tlegend: \"Time\",\n\t\t\t\ttickRotation: -30,\n\t\t\t\tlegendOffset: 60,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\torient: \"left\",\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Reading Value\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\ttooltip={({\n\t\t\t\tpoint: {\n\t\t\t\t\tx,\n\t\t\t\t\tserieColor,\n\t\t\t\t\tdata: { xFormatted, yFormatted },\n\t\t\t\t},\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${styles.tooltip} ${\n\t\t\t\t\t\t\tx > 700 && styles.translatedOnRight\n\t\t\t\t\t\t} ${x < 70 && styles.translatedOnLeft}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={styles.square}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: serieColor,\n\t\t\t\t\t\t\t\twidth: \"20px\",\n\t\t\t\t\t\t\t\theight: \"20px\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div className={styles.paragraphs}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Time</strong>: {xFormatted}{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Reading</strong>: {yFormatted}{\" \"}\n\t\t\t\t\t\t\t\t{units === \"m3\" ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : units === \"ft3\" ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tft<sup>3</sup>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<span>{units}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tpointSize={5}\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={2}\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\n\t\t\tpointLabelYOffset={-12}\n\t\t\tpointLabelXOffset={-12}\n\t\t\tenableArea={true}\n\t\t\tuseMesh={true}\n\t\t\tareaOpacity={0.3}\n\t\t/>\n\t);\n};\n\nexport default Consumption;\n","W:\\UoESmartGrid\\client\\src\\Components\\Detailed\\detailed.js",["105","106"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./detailed.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport moment from \"moment\";\nimport Loading from \"../Loading/Loading\";\n\nconst Detailed = () => {\n\tlet { date } = useParams();\n\tconst newDate = moment(date.split(\" \")[0]);\n\tconst displayDate = newDate.format(\"dddd [the] Do [of] MMMM YYYY\");\n\tconst startDate = newDate.format(\"YYYY-MM-DD\");\n\tconst [iconName, setIconName] = useState(\"\");\n\tconst [graphData, setGraphData] = useState([]);\n\tconst [data, setData] = useState([]);\n\tuseEffect(async () => {\n\t\tdelete axios.defaults.headers.common[\"x-auth-token\"];\n\t\tconst res = await axios.get(\n\t\t\t`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/50.73693657241516%2C%20-3.535222603443927/${startDate}?unitGroup=uk&key=X3SP63DXBLARJBRRF6PMBTYK6&include=obs%2Chours%2Ccurrent%2Chistfcst`\n\t\t);\n\t\taxios.defaults.headers.common[\"x-auth-token\"] = localStorage[\"token\"];\n\t\tsetData(res.data);\n\t\tconst hourlyData = res.data.days[0].hours;\n\t\tconst icon = res.data.days[0].icon;\n\t\tsetGraphData(hourlyData);\n\t\tif (icon === \"rain\") {\n\t\t\tsetIconName(\"chancerain.svg\");\n\t\t} else if (icon === \"snow\") {\n\t\t\tsetIconName(\"chancesnow.svg\");\n\t\t} else if (icon === \"cloudy\") {\n\t\t\tsetIconName(\"cloudy.svg\");\n\t\t} else if (icon === \"partly-cloudy-day\") {\n\t\t\tsetIconName(\"partlycloudy.svg\");\n\t\t} else if (icon === \"partly-cloudy-night\") {\n\t\t\tsetIconName(\"nt_partlycloudy.svg\");\n\t\t} else if (icon === \"fog\") {\n\t\t\tsetIconName(\"fog.svg\");\n\t\t} else if (icon === \"wind\") {\n\t\t\tsetIconName(\"hazy.svg\");\n\t\t} else if (icon === \"clear-day\") {\n\t\t\tsetIconName(\"clear.svg\");\n\t\t} else if (icon === \"clear-night\") {\n\t\t\tsetIconName(\"nt_clear.svg\");\n\t\t} else {\n\t\t\tsetIconName(\"unknown.svg\");\n\t\t}\n\t}, []);\n\tconst tempData = graphData.map((e) => ({ x: e.datetime, y: e.temp }));\n\tconst humidityData = graphData.map((e) => ({\n\t\tx: e.datetime,\n\t\ty: e.humidity,\n\t}));\n\tconst windspeedData = graphData.map((e) => ({\n\t\tx: e.datetime,\n\t\ty: e.windspeed,\n\t}));\n\tconst LineData1 = [\n\t\t{\n\t\t\tid: \"\",\n\t\t\tdata: tempData,\n\t\t},\n\t];\n\tconst LineData2 = [\n\t\t{\n\t\t\tid: \"\",\n\t\t\tdata: humidityData,\n\t\t},\n\t];\n\tconst LineData3 = [\n\t\t{\n\t\t\tid: \"\",\n\t\t\tdata: windspeedData,\n\t\t},\n\t];\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{data?.days?.length > 0 ? (\n\t\t\t\t<div className={styles.Boxed}>\n\t\t\t\t\t<h3>Weather Data for {displayDate}</h3>\n\t\t\t\t\t<img src={\"/black/svg/\" + iconName} alt=\"\" />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAverage Temperature:{\"  \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t{data.days[0].temp}\n\t\t\t\t\t\t\t&#8451;\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMinimum:{\"  \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t{data.days[0].tempmin}\n\t\t\t\t\t\t\t&#8451;\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMaximum:{\"  \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t{data.days[0].tempmax}\n\t\t\t\t\t\t\t&#8451;\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFeels Like:{\"  \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t{data.days[0].feelslike}\n\t\t\t\t\t\t\t&#8451;\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAverage Wind Speed:\n\t\t\t\t\t\t<b> {data.days[0].windspeed} m/h</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHumidity: <b> {data.days[0].humidity}%</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPrecipitation:\n\t\t\t\t\t\t<b> {data.days[0].precip} mm</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tVisibility:\n\t\t\t\t\t\t<b> {data.days[0].visibility} miles</b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCloud Coverage:\n\t\t\t\t\t\t<b> {data.days[0].cloudcover}%</b>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<div className={styles.Chart}>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\tTemperature on the {newDate.format(\"Do [of] MMMM\")}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<MyResponsiveLine\n\t\t\t\t\t\t\tdata={LineData1}\n\t\t\t\t\t\t\tunits={<>&#8451;</>}\n\t\t\t\t\t\t\tleftLegend=\"Temperature (&#8451;)\"\n\t\t\t\t\t\t\tchosenScheme=\"category10\"\n\t\t\t\t\t\t\tmin=\"-4\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\tHumidity on the {newDate.format(\"Do [of] MMMM\")}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<MyResponsiveLine\n\t\t\t\t\t\t\tdata={LineData2}\n\t\t\t\t\t\t\tunits=\"%\"\n\t\t\t\t\t\t\tleftLegend=\"Humidity (%)\"\n\t\t\t\t\t\t\tchosenScheme=\"set1\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\tWind Speed on the {newDate.format(\"Do [of] MMMM\")}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<MyResponsiveLine\n\t\t\t\t\t\t\tdata={LineData3}\n\t\t\t\t\t\t\tunits=\"m/h\"\n\t\t\t\t\t\t\tleftLegend=\"Wind Speed (miles per hour)\"\n\t\t\t\t\t\t\tchosenScheme=\"spectral\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Loading />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nconst MyResponsiveLine = ({ data, units, leftLegend, chosenScheme, min }) => {\n\treturn (\n\t\t<ResponsiveLine\n\t\t\tdata={data}\n\t\t\tmargin={{ top: 20, right: 70, bottom: 70, left: 70 }}\n\t\t\txScale={{\n\t\t\t\ttype: \"time\",\n\t\t\t\tformat: \"%H:%M:%S\",\n\t\t\t}}\n\t\t\txFormat=\"time:%H:%M\"\n\t\t\tyScale={{\n\t\t\t\ttype: \"linear\",\n\t\t\t\tmax: \"auto\",\n\t\t\t\tstacked: true,\n\t\t\t\tmin: min,\n\t\t\t}}\n\t\t\tyFormat=\" >-.2f\"\n\t\t\tcurve=\"monotoneX\"\n\t\t\taxisTop={null}\n\t\t\taxisRight={null}\n\t\t\taxisBottom={{\n\t\t\t\torient: \"bottom\",\n\t\t\t\tformat: \"%H:%M\",\n\t\t\t\ttickValues: \"every 2 hours\",\n\t\t\t\tlegend: \"Time\",\n\t\t\t\ttickRotation: -30,\n\t\t\t\tlegendOffset: 50,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\torient: \"left\",\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: leftLegend,\n\t\t\t\tlegendOffset: -40,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\ttooltip={({\n\t\t\t\tpoint: {\n\t\t\t\t\tx,\n\t\t\t\t\tserieColor,\n\t\t\t\t\tdata: { xFormatted, yFormatted },\n\t\t\t\t},\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${styles.tooltip} ${\n\t\t\t\t\t\t\tx > 850 && styles.translatedOnRight\n\t\t\t\t\t\t} ${x < 70 && styles.translatedOnLeft}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={styles.square}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: serieColor,\n\t\t\t\t\t\t\t\twidth: \"20px\",\n\t\t\t\t\t\t\t\theight: \"20px\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div className={styles.paragraphs}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Time</strong>: {xFormatted}{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Reading</strong>: {yFormatted} {units}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t\tcolors={{ scheme: chosenScheme }}\n\t\t\tlineWidth={3}\n\t\t\tpointSize={5}\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={2}\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\n\t\t\tpointLabelYOffset={-12}\n\t\t\tpointLabelXOffset={-12}\n\t\t\tenableArea={true}\n\t\t\tuseMesh={true}\n\t\t\tareaOpacity={0.3}\n\t\t/>\n\t);\n};\n\nexport default Detailed;\n","W:\\UoESmartGrid\\client\\src\\Components\\Navigation\\TopNavigation\\TopNavigation.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Info\\Info.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Forecast\\forecast.js",["107","108","109","110","111","112","113"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./forecast.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ResponsiveLine } from \"@nivo/line\";\nimport moment from \"moment\";\nimport Loading from \"../Loading/Loading\";\n\nconst Forecast = () => {\n\tlet { building } = useParams();\n\tconst [rooms, setRooms] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [predictions, setPredictions] = useState([]);\n\tconst [selectedRoom, setSelectedRoom] = useState(\"\");\n\tconst [selectedReading, setSelectedReading] = useState(null);\n\tconst [cleanData, setCleanData] = useState({\n\t\tsum: 0,\n\t\tmean: 0,\n\t\tweekdaysum: 0,\n\t\tweekdaymean: 0,\n\t\toperatingsum: 0,\n\t\toperatingmean: 0,\n\t\tweekendsum: 0,\n\t\tweekendmean: 0,\n\t\tnotoperatingsum: 0,\n\t\tnotoperatingmean: 0,\n\t\tmax_value: [0, 0, 0, 0, 0, 0, 0],\n\t\tmin_value: [0, 0, 0, 0, 0, 0, 0],\n\t});\n\tconst [readings, setReadings] = useState(null);\n\tconst [units, setUnits] = useState(\"\");\n\tconst [showModal, setShowModal] = useState(false);\n\n\tuseEffect(async () => {\n\t\tconst res = await axios.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/api/rooms/${building}`\n\t\t);\n\t\tsetRooms(res.data.room);\n\t}, []);\n\n\tuseEffect(async () => {\n\t\tsetPredictions([]);\n\t\tconst res = await axios.get(\n\t\t\t`${process.env.REACT_APP_API_URL}/api/rooms/reading?Room=${selectedRoom}`\n\t\t);\n\t\tsetReadings(res.data.readings);\n\t}, [selectedRoom]);\n\n\tuseEffect(async () => {\n\t\tif (selectedReading === null) return;\n\t\tsetLoading(true);\n\t\tsetPredictions([]);\n\t\tconst data = await getData();\n\t\tif (data) {\n\t\t\tsetPredictions(data);\n\t\t}\n\t\tsetLoading(false);\n\t}, [selectedReading]);\n\n\tconst getData = async () => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\t\tconst body = JSON.stringify({\n\t\t\troom: encodeURI(selectedRoom),\n\t\t\tbuilding: building,\n\t\t\treading: selectedReading,\n\t\t});\n\t\tconst res = await axios.post(\n\t\t\t`${process.env.REACT_APP_API_URL}/api/forecast`,\n\t\t\tbody,\n\t\t\tconfig\n\t\t);\n\t\treturn res.data;\n\t};\n\n\tconst LineData = [\n\t\t{\n\t\t\tid: \"\",\n\t\t\tdata: predictions.map((pred) => {\n\t\t\t\treturn {\n\t\t\t\t\tx: pred[10],\n\t\t\t\t\ty: pred[9],\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t];\n\n\tconst handleClick = (e) => {\n\t\tsetShowModal(!showModal);\n\t};\n\tlet sum,\n\t\tmean,\n\t\tweekdaysum,\n\t\tweekdaymean,\n\t\toperatingsum,\n\t\toperatingmean,\n\t\tweekendsum,\n\t\tweekendmean,\n\t\tnotoperatingsum,\n\t\tnotoperatingmean,\n\t\tmax_value,\n\t\tmin_value;\n\n\tif (predictions.length > 1) {\n\t\tconst predictionsCopy = [...predictions];\n\t\tconst values = predictionsCopy.map((item) => item[9]);\n\t\tsum = values.reduce((acc, current) => acc + current);\n\t\tmean = sum / values.length;\n\t\tconst weekdayvalues = predictionsCopy\n\t\t\t.map((item) => item[6] === 1 && item[9])\n\t\t\t.filter((value) => value !== false);\n\t\tconst operatingvalues = predictionsCopy\n\t\t\t.map((item) => item[7] === 1 && item[9])\n\t\t\t.filter((value) => value !== false);\n\t\tweekdaysum = weekdayvalues.reduce((acc, current) => acc + current);\n\t\tweekdaymean = weekdaysum / weekdayvalues.length;\n\t\toperatingsum = operatingvalues.reduce((acc, current) => acc + current);\n\t\toperatingmean = operatingsum / operatingvalues.length;\n\t\tconst weekendvalues = predictionsCopy\n\t\t\t.map((item) => item[6] === 0 && item[9])\n\t\t\t.filter((value) => value !== false);\n\n\t\tconst notoperatingvalues = predictionsCopy\n\t\t\t.map((item) => item[7] === 0 && item[9])\n\t\t\t.filter((value) => value !== false);\n\t\tweekendsum = weekendvalues.reduce((acc, current) => acc + current);\n\t\tweekendmean = weekendsum / weekendvalues.length;\n\t\tnotoperatingsum = notoperatingvalues.reduce(\n\t\t\t(acc, current) => acc + current\n\t\t);\n\t\tnotoperatingmean = notoperatingsum / notoperatingvalues.length;\n\n\t\tconst sortedValues = predictionsCopy.sort((a, b) => a[9] - b[9]);\n\t\tmax_value = sortedValues[sortedValues.length - 1];\n\t\tmin_value = sortedValues[0];\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.left}>\n\t\t\t\t<div className={styles.title}>\n\t\t\t\t\t<h3>Consumption Forecast</h3>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.Prompt}>\n\t\t\t\t\t{!selectedRoom ? (\n\t\t\t\t\t\t<h5>Select a Room</h5>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t!selectedReading && <h5>Select a Measurement</h5>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.roomNames}>\n\t\t\t\t\t{rooms.map((room, index) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={() => setSelectedRoom(room.value)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderRight:\n\t\t\t\t\t\t\t\t\tselectedRoom === room.value\n\t\t\t\t\t\t\t\t\t\t? \"10px solid rgba(0, 124, 226, 0.8)\"\n\t\t\t\t\t\t\t\t\t\t: \"10px solid transparent\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{room.value}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.right}>\n\t\t\t\t<div className={styles.readingTabs}>\n\t\t\t\t\t{readings &&\n\t\t\t\t\t\treadings.map((reading, index) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetSelectedReading(reading.name);\n\t\t\t\t\t\t\t\t\treading.name === \"Electric\"\n\t\t\t\t\t\t\t\t\t\t? setUnits(\"kWh\")\n\t\t\t\t\t\t\t\t\t\t: reading.name === \"Water\"\n\t\t\t\t\t\t\t\t\t\t? setUnits(\"m3\")\n\t\t\t\t\t\t\t\t\t\t: reading.name === \"Gas\" &&\n\t\t\t\t\t\t\t\t\t\t  setUnits(\"ft3\");\n\t\t\t\t\t\t\t\t\t// Call network and predict value\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tselectedReading === reading.name\n\t\t\t\t\t\t\t\t\t\t? styles.tabActive\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{reading.name}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.graphTitle}>\n\t\t\t\t\t{predictions.length > 0 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h3>Usage in the next 14 days</h3>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{predictions.length > 0 && (\n\t\t\t\t\t<div className={styles.observations}>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal Usage:{\" \"}\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{Math.round(sum * 100) / 100} {units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAverage Usage:{\" \"}\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{Math.round(mean * 100) / 100} {units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tHighest Usage:{\" \"}\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{Math.round(max_value[9] * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\ton{\" \"}\n\t\t\t\t\t\t\t\t{moment(max_value[10]).format(\n\t\t\t\t\t\t\t\t\t\"dddd Do [at] HH:mm\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tLowest Usage:{\" \"}\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{Math.round(min_value[9] * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\ton{\" \"}\n\t\t\t\t\t\t\t\t{moment(min_value[10]).format(\n\t\t\t\t\t\t\t\t\t\"dddd Do [at] HH:mm\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal Weekday Usage:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(weekdaysum * 100) / 100} {units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAverage Weekday Usage:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(weekdaymean * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal Weekend Usage:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(weekendsum * 100) / 100} {units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAverage Weekend Usage:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(weekendmean * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal Usage In Operating Hours:{\" \"}\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{Math.round(operatingsum * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAverage Usage In Operating Hours:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(operatingmean * 100) / 100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTotal Usage Outside Operating Hours:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(notoperatingsum * 100) /\n\t\t\t\t\t\t\t\t\t\t100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tAverage Usage Outside Operating Hours:\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t{Math.round(notoperatingmean * 100) /\n\t\t\t\t\t\t\t\t\t\t100}{\" \"}\n\t\t\t\t\t\t\t\t\t{units}\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className={styles.GraphStyling}>\n\t\t\t\t\t{!loading && predictions.length > 0 ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<MyResponsiveLine\n\t\t\t\t\t\t\t\tdata={LineData}\n\t\t\t\t\t\t\t\tunits={units}\n\t\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t\t\tchosenScheme=\"set1\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : loading ? (\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>No Data Available</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst MyResponsiveLine = ({ data, units, handleClick, chosenScheme }) => {\n\treturn (\n\t\t<ResponsiveLine\n\t\t\tonClick={(e) => handleClick(e)}\n\t\t\tdata={data}\n\t\t\tmargin={{ top: 80, right: 50, bottom: 70, left: 50 }}\n\t\t\txScale={{\n\t\t\t\ttype: \"time\",\n\t\t\t\tformat: \"%Y-%m-%d %H:%M\",\n\t\t\t}}\n\t\t\txFormat=\"time:%Y-%m-%d %H:%M\"\n\t\t\tyScale={{\n\t\t\t\ttype: \"linear\",\n\t\t\t\tmax: \"auto\",\n\t\t\t\tstacked: true,\n\t\t\t\tmin: 0,\n\t\t\t}}\n\t\t\tyFormat=\" >-.2f\"\n\t\t\tcurve=\"monotoneX\"\n\t\t\taxisTop={null}\n\t\t\taxisRight={null}\n\t\t\taxisBottom={{\n\t\t\t\torient: \"bottom\",\n\t\t\t\tformat: \"%b %d, %H:%M\",\n\t\t\t\ttickValues: 10,\n\t\t\t\tlegend: \"Time\",\n\t\t\t\ttickRotation: -30,\n\t\t\t\tlegendOffset: 60,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\torient: \"left\",\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Reading Value\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t}}\n\t\t\ttooltip={({\n\t\t\t\tpoint: {\n\t\t\t\t\tx,\n\t\t\t\t\tserieColor,\n\t\t\t\t\tdata: { xFormatted, yFormatted },\n\t\t\t\t},\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${styles.tooltip} ${\n\t\t\t\t\t\t\tx > 700 && styles.translatedOnRight\n\t\t\t\t\t\t} ${x < 70 && styles.translatedOnLeft}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={styles.square}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: serieColor,\n\t\t\t\t\t\t\t\twidth: \"20px\",\n\t\t\t\t\t\t\t\theight: \"20px\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div className={styles.paragraphs}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Time</strong>: {xFormatted}{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>Reading</strong>: {yFormatted}{\" \"}\n\t\t\t\t\t\t\t\t{units === \"m3\" ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : units === \"ft3\" ? (\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tm<sup>3</sup>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<span>{units}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t\tcolors={{ scheme: chosenScheme }}\n\t\t\tpointSize={5}\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={2}\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\n\t\t\tpointLabelYOffset={-12}\n\t\t\tpointLabelXOffset={-12}\n\t\t\tenableArea={true}\n\t\t\tuseMesh={true}\n\t\t\tareaOpacity={0.3}\n\t\t/>\n\t);\n};\n\nexport default Forecast;\n","W:\\UoESmartGrid\\client\\src\\Components\\Navigation\\BottomNavigation\\BottomNavigation.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Logout\\Logout.js",["114"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\n\nconst Logout = ({ logout }) => {\n\tuseEffect(() => {\n\t\tlogout();\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t<p>Logging Out...</p>\n\t\t</div>\n\t);\n};\n\nexport default connect(null, { logout })(Logout);\n","W:\\UoESmartGrid\\client\\src\\actions\\types.js",[],"W:\\UoESmartGrid\\client\\src\\Components\\Loading\\Loading.js",[],"W:\\UoESmartGrid\\client\\src\\reducers\\index.js",[],"W:\\UoESmartGrid\\client\\src\\reducers\\auth.js",["115"],"import {\n\tLOGIN_FAIL,\n\tLOGIN_SUCCESS,\n\tAUTH_ERROR,\n\tLOGOUT,\n\tUSER_LOADED,\n} from \"../actions/types\";\n\nconst initialState = {\n\ttoken: localStorage.getItem(\"token\"),\n\tisAuthenticated: false,\n\tloading: true,\n\tuser: null,\n};\n\nexport default function (state = initialState, action) {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem(\"token\", payload.token);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase LOGIN_FAIL:\n\t\tcase AUTH_ERROR:\n\t\tcase LOGOUT:\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttoken: null,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tloading: false,\n\t\t\t\tuser: null,\n\t\t\t};\n\t\tcase USER_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\tloading: false,\n\t\t\t\tuser: payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","W:\\UoESmartGrid\\client\\src\\reducers\\user.js",[],["116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":72,"column":12,"nodeType":"124","endLine":77,"endColumn":3},{"ruleId":"122","severity":1,"message":"125","line":77,"column":5,"nodeType":"126","endLine":77,"endColumn":7,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"123","line":79,"column":12,"nodeType":"124","endLine":86,"endColumn":3},{"ruleId":"122","severity":1,"message":"128","line":86,"column":5,"nodeType":"126","endLine":86,"endColumn":11,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"123","line":88,"column":12,"nodeType":"124","endLine":90,"endColumn":3},{"ruleId":"122","severity":1,"message":"130","line":90,"column":5,"nodeType":"126","endLine":90,"endColumn":42,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"123","line":17,"column":12,"nodeType":"124","endLine":48,"endColumn":3},{"ruleId":"122","severity":1,"message":"132","line":48,"column":5,"nodeType":"126","endLine":48,"endColumn":7,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":16,"column":9,"nodeType":"136","messageId":"137","endLine":16,"endColumn":18},{"ruleId":"134","severity":1,"message":"138","line":16,"column":20,"nodeType":"136","messageId":"137","endLine":16,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":34,"column":12,"nodeType":"124","endLine":39,"endColumn":3},{"ruleId":"122","severity":1,"message":"125","line":39,"column":5,"nodeType":"126","endLine":39,"endColumn":7,"suggestions":"139"},{"ruleId":"122","severity":1,"message":"123","line":41,"column":12,"nodeType":"124","endLine":47,"endColumn":3},{"ruleId":"122","severity":1,"message":"123","line":49,"column":12,"nodeType":"124","endLine":58,"endColumn":3},{"ruleId":"122","severity":1,"message":"130","line":58,"column":5,"nodeType":"126","endLine":58,"endColumn":22,"suggestions":"140"},{"ruleId":"122","severity":1,"message":"141","line":8,"column":5,"nodeType":"126","endLine":8,"endColumn":7,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":16,"column":1,"nodeType":"145","endLine":48,"endColumn":2},{"ruleId":"118","replacedBy":"146"},{"ruleId":"120","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'building'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'timeIntervals'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'startDate'. Either include it or remove the dependency array.",["153"],"no-unused-vars","'cleanData' is assigned a value but never used.","Identifier","unusedVar","'setCleanData' is assigned a value but never used.",["154"],["155"],"React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array. If 'logout' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["156"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["148"],["149"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"157","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [building]",{"range":"170","text":"171"},"Update the dependencies array to be: [Room, timeIntervals]",{"range":"172","text":"173"},"Update the dependencies array to be: [readings, interval, selectedReading, getData]",{"range":"174","text":"175"},"Update the dependencies array to be: [startDate]",{"range":"176","text":"177"},{"range":"178","text":"171"},"Update the dependencies array to be: [getData, selectedReading]",{"range":"179","text":"180"},"Update the dependencies array to be: [logout]",{"range":"181","text":"182"},[2136,2138],"[building]",[2371,2377],"[Room, timeIntervals]",[2423,2460],"[readings, interval, selectedReading, getData]",[1849,1851],"[startDate]",[1197,1199],[1626,1643],"[getData, selectedReading]",[195,197],"[logout]"]